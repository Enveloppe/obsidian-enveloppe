import esbuild from "esbuild";
import process from "process";
import builtins from 'builtin-modules'
import fs from "fs";

const banner =
`/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/
`;
const moveStyles = {
	name: 'move-styles',
	setup(build) {
		build.onEnd(() => {
			fs.copyFileSync('plugin/styles.css', './styles.css');
		});
	}
}
const prod = (process.argv[2] === 'production');
console.log(`Building in ${prod ? 'production' : 'development'} mode`);
console.log('Process arguments: ', process.argv);

/* esbuild.build({
	banner: {
		js: banner,
	},
	entryPoints: ['plugin/main.ts', 'plugin/styles.css'],
	bundle: true,
	external: ['obsidian', 'electron', ...builtins],
	format: 'cjs',
	watch: !prod,
	target: 'es2016',
	logLevel: "info",
	treeShaking: true,
	minify: prod,
	outdir: './',
	plugins: [moveStyles],

}).catch(() => process.exit(1));*/

esbuild.context({
	banner: {
		js: banner,
	},
	entryPoints: ['plugin/main.ts', 'plugin/styles.css'],
	bundle: true,
	sourcemap: true,
	external: ['obsidian', 'electron', ...builtins],
	format: 'cjs',
	outdir: './',
	plugins: [moveStyles],
	logLevel: "info",
	treeShaking: true,
	minify: prod,
}).then(context => {
	if (!prod) context.watch();
	else {
		context.rebuild().then(result => { context.dispose()
		});
	}
}).catch(() => process.exit(1));