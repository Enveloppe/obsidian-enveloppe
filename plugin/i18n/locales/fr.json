{
	"commands": {
		"checkValidity": {
			"inBranch": {
				"error403": "Erreur 403: {{repoInfo}} a été déplacé de manière permanente (depuis {{branchInfo}}",
				"error404": "Erreur 404 : La branche {{branchInfo}} est introuvable depuis {{repoInfo}}"
			},
			"inRepo": {
				"error301": "Erreur 301 : {{repoInfo}} a été déplacé de manière permanente",
				"error403": "Erreur 403 : Cette action est interdite pour {{repoInfo}}",
				"error404": "Erreur 404 : {{repoInfo}} est introuvable"
			},
			"repoExistsTestBranch": "Le dépôt {{repoOwner}}/{{repoName}} existe. Maintenant, nous allons tester la branche {{main}}",
			"success": "{{repoInfo}} semble valide !",
			"title": "Tester la connexion au dépôt configuré"
		},
		"publisherDeleteClean": "Purger les fichiers dépubliés et supprimés",
		"shareActiveFile": "Transférer la note active",
		"shareViewFiles": "Transférer {{viewFile}} avec Github Publisher",
		"uploadAllEditedNote": "Rafraîchir toutes les notes publiées",
		"uploadAllNewEditedNote": "Rafraîchir les notes publiées et transférer les nouvelles notes",
		"uploadAllNotes": "Transférer toutes les notes",
		"uploadNewNotes": "Transférer les nouvelles notes"
	},
	"common": {
		"add": "Ajouter {{things}}",
		"after": "Après",
		"before": "Avant",
		"cancel": "Annuler",
		"close": "Fermer",
		"delete": "Supprimer {{things}}",
		"edit": "Éditer {{things}}",
		"error": "Erreur",
		"here": "ici",
		"path": {
			"file": "Nom du fichier",
			"folder": "Chemin du dossier",
			"full": "Chemin du fichier"
		},
		"regex": "regex",
		"save": "Sauvegarder",
		"text": "texte",
		"warning": "Attention"
	},
	"deletion": {
		"defaultFolder": "Vous avez besoin d'un dossier par défaut dans les paramètres pour utiliser cette commande.",
		"failed": "Échec de la suppression de {{nb}} notes.",
		"noFile": "Aucun fichier n'a été supprimé.",
		"rootFolder": "Vous devez configurer un dossier racine dans les paramètres pour utiliser cette commande.",
		"success": "Suppression réussie de {{nb}} fichiers."
	},
	"error": {
		"dataview": "Impossible de convertir la requête Dataview. Veuillez mettre à jour le module Dataview à la dernière version;",
		"errorConfig": "Erreur de configuration pour {{repoInfo}}. Merci de vérifier vos paramètres.",
		"errorPublish": "Erreur lors de la publication sur {{repoInfo}}",
		"isEmpty": "{{repoInfo}} est vide.",
		"mergeconflic": "La Pull-Request n'est pas fusionnale, vous avez besoin de le faire manuellement.",
		"unablePublishMultiNotes": "Impossible de transférer plusieurs notes, quelque chose s'est mal passé.",
		"unablePublishNote": "Impossible de transférer {{file}}, le fichier a été ignoré.",
		"whatEmpty": {
			"branch": "Branch",
			"ghToken": "Github Token",
			"owner": "Propriétaire",
			"repo": "Dépôt"
		}
	},
	"informations": {
		"foundNoteToSend": "Trouvé {{nbNotes}} nouvelles notes à transférer.",
		"noNewNote": "Aucune note à transférer.",
		"scanningRepo": "Scan du dépôt, veuillez patienter...",
		"sendMessage": "Transfert de {{nbNotes}} notes vers {{repoOwner}}/{{repoName}}",
		"startingClean": "Début du nettoyage de {{repoInfo}}",
		"successfullPublish": "Transfert réussi de {{nbNotes}} notes vers {{repoInfo}}",
		"waitingWorkflow": "Maintenant, attente de la fin du workflow..."
	},
	"modals": {
		"export": {
			"copy": "Copier vers le presse-papier",
			"desc": "Exporter les paramètres vers un fichier ou dans le presse-papier.",
			"download": "Télécharger",
			"title": "Exporter"
		},
		"import": {
			"desc": "Importer des paramètres depuis un fichier ou un texte. Cela écrasera vos paramètres actuels (sauf le nom du dépôt, le nom d'utilisateur et votre token)",
			"error": {
				"isEmpty": "la configuration est vide",
				"span": "Erreur lors de l'importation de la configuration :"
			},
			"importFromFile": "Import depuis le fichier",
			"paste": "Coller la configuration ici...",
			"title": "Importer"
		}
	},
	"publish": {
		"branch": {
			"alreadyExists": "La branche {{branchName}} sur {{repoInfo}} existe déjà - Utilisation de celle-ci.",
			"error": "Erreur avec {{repoInfo}} : {{error}}",
			"prMessage": "Pull-Request [{{branchName}}] depuis Obsidian",
			"success": "La branche a été crée avec succès (status: {{branchStatuts}} sur {{repoInfo}})"
		}
	},
	"regex": {
		"entry": "Valeur à remplacer",
		"replace": "Remplacement"
	},
	"settings": {
		"conversion": {
			"censor": {
				"edit": "Éditer les paramètres (flags et ordre d'éxécution)",
				"empty": "Le remplacement peut être vide pour supprimer l'ensemble de la chaîne de caractère.",
				"flags": {
					"dotAll": "s : Dot-all",
					"error": "Le flags {{flag}} n'est pas valide.",
					"global": "g : Global",
					"insensitive": "i : Insensible à la casse",
					"multiline": "m: Multi-ligne",
					"sticky": "y : Sticky",
					"title": "Flags (basé sur JS regex et pouvant être combinés) :",
					"unicode": "u : Unicode"
				},
				"modal": {
					"desc": "Replace des textes (ou des regex) dans le fichier par la valeur donnée.",
					"title": "Remplacement de texte"
				},
				"MomentReplaceRegex": "Choisissez quand le regex sera appliqué : Avant ou après les autres conversions (dataview, liens internes...)",
				"title": "Remplacement de texte sur : {{what}}"
			},
			"dataview": {
				"desc": "",
				"title": ""
			},
			"desc": "",
			"hardBreak": {
				"desc": "",
				"title": ""
			},
			"links": {
				"desc": "",
				"folderNote": {
					"desc": "",
					"title": ""
				},
				"internals": {
					"desc": "",
					"title": ""
				},
				"nonShared": {
					"desc": "",
					"title": ""
				},
				"title": "",
				"wikilinks": {
					"desc": "",
					"title": ""
				}
			},
			"sectionTitle": "",
			"tags": {
				"desc": "",
				"exclude": {
					"desc": "",
					"title": ""
				},
				"inlineTags": {
					"desc": "",
					"title": ""
				},
				"title": ""
			},
			"title": ""
		},
		"embed": {
			"defaultImageFolder": {
				"desc": "",
				"title": ""
			},
			"title": "",
			"transferImage": {
				"desc": "",
				"title": ""
			},
			"transferMetaFile": {
				"desc": "",
				"title": ""
			},
			"transferNotes": {
				"desc": "",
				"title": ""
			}
		},
		"exportSettings": "",
		"github": {
			"apiType": {
				"desc": "",
				"dropdown": {
					"enterprise": "",
					"free": ""
				},
				"hostname": {
					"desc": "",
					"title": ""
				},
				"title": ""
			},
			"automaticallyMergePR": "",
			"branch": {
				"desc": "",
				"title": ""
			},
			"ghToken": {
				"desc": "",
				"here": "",
				"title": ""
			},
			"repoName": {
				"desc": "",
				"placeholder": "",
				"title": ""
			},
			"testConnection": "",
			"title": "",
			"username": {
				"desc": "",
				"title": ""
			}
		},
		"githubWorkflow": {
			"autoCleanUp": {
				"desc": "",
				"title": ""
			},
			"excludedFiles": {
				"desc": "",
				"title": ""
			},
			"githubAction": {
				"desc": "",
				"title": ""
			},
			"prRequest": {
				"desc": "",
				"title": ""
			},
			"useMetadataExtractor": {
				"desc": "",
				"title": ""
			}
		},
		"help": {
			"frontmatter": {
				"attachment": {
					"folder": "",
					"send": ""
				},
				"autoclean": "",
				"baselink": "",
				"convert": {
					"enableOrDisable": "",
					"or": "",
					"syntax": ""
				},
				"dataview": "",
				"desc": "",
				"embed": {
					"remove": "",
					"send": ""
				},
				"hardBreak": "",
				"internals": "",
				"mdlinks": "",
				"nonShared": "",
				"repo": {
					"branch": "",
					"desc": "",
					"owner": "",
					"repo": ""
				},
				"share": "",
				"title": "",
				"titleKey": ""
			},
			"multiRepoHelp": {
				"desc": "",
				"desc2": "",
				"exampleDesc": "",
				"title": ""
			},
			"title": "",
			"usefulLinks": {
				"discussion": "",
				"documentation": "",
				"issue": "",
				"links": "",
				"repository": "",
				"title": ""
			}
		},
		"importSettings": "",
		"plugin": {
			"copyLink": {
				"baselink": {
					"desc": "",
					"title": ""
				},
				"desc": "",
				"linkpathremover": {
					"desc": "",
					"title": ""
				},
				"title": ""
			},
			"editorMenu": {
				"desc": "",
				"title": ""
			},
			"excludedFolder": {
				"desc": "",
				"title": ""
			},
			"fileMenu": {
				"desc": "",
				"title": ""
			},
			"logNoticeHeader": {
				"desc": "",
				"title": ""
			},
			"shareExternalModified": {
				"desc": "",
				"title": ""
			},
			"shareKey": {
				"desc": "",
				"title": ""
			},
			"title": ""
		},
		"upload": {
			"defaultFolder": {
				"desc": "",
				"placeholder": "",
				"title": ""
			},
			"filepathRegex": {
				"desc": "",
				"placeholder": ""
			},
			"folderBehavior": {
				"desc": "",
				"fixedFolder": "",
				"obsidianPath": "",
				"title": "",
				"yaml": ""
			},
			"frontmatterKey": {
				"desc": "",
				"placeholder": "",
				"title": ""
			},
			"frontmatterRegex": {
				"desc": "",
				"placeholder": ""
			},
			"pathRemoving": {
				"desc": "",
				"placeholder": "",
				"title": ""
			},
			"rootFolder": {
				"desc": "",
				"title": ""
			},
			"title": "",
			"useFrontmatterTitle": {
				"desc": "",
				"title": ""
			}
		}
	}
}
